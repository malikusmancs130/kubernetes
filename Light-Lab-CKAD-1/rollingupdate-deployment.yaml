# Create a new deployment called nginx-deploy, with one single container called nginx, image nginx:1.16 and 4 replicas.
# The deployment should use RollingUpdate strategy with maxSurge=1, and maxUnavailable=2.
# Next upgrade the deployment to version 1.17.
# Finally, once all pods are updated, undo the update and go back to the previous version.
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
  creationTimestamp: "2023-09-09T12:08:59Z"
  generation: 3
  labels:
    app: nginx-deploy
  name: nginx-deploy
  namespace: default
  resourceVersion: "11549"
  uid: f6cbf169-b098-4b36-a646-acbd7143c65e
spec:
  progressDeadlineSeconds: 600
  replicas: 4
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx-deploy
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx-deploy
    spec:
      containers:
      - image: nginx:1.16
        imagePullPolicy: IfNotPresent
        name: nginx
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 4
  conditions:
  - lastTransitionTime: "2023-09-09T12:09:06Z"
    lastUpdateTime: "2023-09-09T12:09:06Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2023-09-09T12:08:59Z"
    lastUpdateTime: "2023-09-09T12:13:42Z"
    message: ReplicaSet "nginx-deploy-dcbd487f9" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  readyReplicas: 4
  replicas: 4
  updatedReplicas: 4
